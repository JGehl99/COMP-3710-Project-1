from StrategyComparer.strategy_comparer import StrategyComparer

if __name__ == '__main__':
    fixed = StrategyComparer(
        n_turns=1000,
        mem=3,
        decimal_spaces=3,
        tft=True,
        tf2t=True,
        stft=True,
        all_d=True,
        all_c=True,
        avg_d=True,
        avg_c=True,
        rand=True,
        custom=[
            # Depth 1
            # Genetic Algorithm
            'DCCC',
            # Hill Climbing
            'CCCC',
            # Tabu Search
            'DCCC',

            # Depth 2
            # Genetic Algorithm
            'DCDCDDCDCDCDCDCC',
            # Hill Climbing
            'DCDDCCCDCDCCDCCD',
            # Tabu Search.
            'DCDCDDCCCCCDCDDD',

            # Depth 3
            # Genetic Algorithm
            'CDDDDDDCCCDCDDCCDDCDDDCDCDCCDDDDDCDCDDCCCCCDCCDDCCDDDDDDCCCCCCCC',
            # Hill Climbing
            'DDCCDDCDCDDDCDDCCDCCCCCDCCDDDDDDDDCCDCDCCDCDCCCDCCDCDDCCDCCDCCCC',
            # Tabu Search
            'DDDCDCDCCCCDCDCCDCDDDDDCDCCDDDDCDCDDDCCDDDCCDCDDDCCCDDDDCDCCDDDD',

            # Depth 4
            # Genetic Algorithm
            'CCDDCDCDDCCDCCDCCCDDCCCCCDCDCCCCDCDDDCCCCDCDDCDDCDDCDCCDDDCCCDDDDDDCDDCCCCCCDDCCDCCDCDCDDCDCCDCDDCCCDCDCCCCCDCCDCDCCDDCCDDDCCDDCCCDDCDCCCCCCDCCCDCDCDCDDDDCDCCDCDDDCDDDDDDCDDCDDDDCDCDDDDCCDDCDCDDDDCDDCDCDDDCDCDDDCCDDCCDDCCDDCCCDDDCDDCCCDDCCDDCCDDCDCCDCCDCCC',
            # Hill Climbing
            'CCCCDCCDDCDDDCDCDCCCDCCDCCDDDCCCDCCDCDDDDCCCCDCDCDDDCDCDDDDDDCCCDDDDCDCDDDCDDDDCDDCCCDCCCDDCDDDDDDCDDCCCCDCDDDCCCCDCDCDDCCCDCDCDDDDDDCDCCDDCCDDCCDCDDCCDCDCDCDDDCCDDDCDCDDDDDDCDCDCDDDDDDCCDCDDDDDCDCCCCCDCDDCDCCDCDDDCCCCCDDDDCCCCCCDDDCDDDDCDCDDDDCDCDDDDDDCCC',
            # Tabu Search
            'CDDCDCDDDCDDCCDDCDCCDCDCDDDDCCCCDCDCDDCCDDDCCDCDDDCCCCDDCDCDCDCDCDCDDCDCCDCDDCCDDDCDDDCCCCCDCDDDCDDDDDCCDDCCDDDDCCDCDCDCDCCCCDDCDCDDCDCDCDCDDDCCDDDDDDCDCDCDCDCDDDDCDDCCCCCCDDCDDDDDDDCDDDDCDDDDDDCCDCCCCDDCCCDCCCDDCDCCDDDCCDDCCDDCDCDDDDCDDDDDCCDDDDCCCCCDDDCC',

            # Depth 5
            # Genetic Algorithm
            'DCDDCDCDDCCDDCCDCDCDDDCDDDDDCDCCDCDCCCCDDDDCDCDCDCDCCCDCCDCCCCCDDCCDCDCCDCDCCDCCDDCDDDCCDDDCCDCDCDDCCCDCDCCCCDCDCDCCCDCCCDDCDCDDDDCCDDCDCDCCCCDDDCCDCCDCCDCDDDDDDDDCCDDDCDDDDCCDCCCCDCDDCDDCCDDDDDCCDDDDDCDDCCDCCCDDCCCDDDCCDCCDDCCDDDDCDDCDDCCDCDDDDDDDDDCDCCDDCCDCCCDDDCCDDDDDCDCCCDCCDCCCCCDCDDCDDDCDCDCDDCDDDCDCDCDCCCDDDCDDDDDDCDDCDCDCCDDDDCCDCCCCDCCCDDDCDDCCDCDDDCDCDCDCCDCDDDDCCDCDDCCCCDDDDCDCCCCDDCCCCCDCCDDDCCDDDCCCDDDCCDCDCCCDCCDCCDDDDDCDCDDDCDDDCCCCCDDDCDDDCDCCCDDCCCDCDDCCCDCDCDDCCCCCDDCDDDCDCDDDDDDDCDCDCCCCCDDDCCDCDCCDDDDDCCDCCCDCCCDCDCDCCCDCDDDDCCDCCDCCDDDDCCDDDCDDCDDCCCCDDCCDDDDCDCCDCCCCDDCCCCDDCDCDCCCCDCCDCDCCCDDCDCDCDDCDCCDDDDDCDCDCCCCDCDDDCCDDDCCDCCCDDCCCDCCDCDDDCDDDCDCDDCDCDCDCCDCDCCCDDDCCCCDCCDDDDDCCDDCCCDDCCCDDDCDCCDDCCDCCDCCCCDDCCDDDDCDDCCCDDCCDDCDCDCDDDCCCDCCCCDCDCCDDCCDCDCDDDCDCCDDDCDDCDCCDDCDCDDCDCCDDCDCDDDCCDDDCDCDDCDCDDCDCCDCDDDDCDDDDDCDCDDCDDDDDCCCCCCCDDDDCCDDDDCCDDDDCDCDDDCCDCDCDDDDDCDCCDCCDCCDCDDDCCDDDCCCDCDCDCDDCDDDCCCCCCDDDCDDDCCDDDDCCDDDCCDCCDDCDDCCDDCDCCDDCCCCCCDCDCCCCCCCDDCDCDDDDCCCCCDCC',
            # Hill Climbing
            'CDCDDCDDCDCCDDDCDDDDCCDDDCDCCCCDCDCDDDCDDCDDDDCCDCCCCDCDDCCCCDDDCCDCCDCDDDDDCCDDDDCCDCCCCDDDCCCCDCCCCCCCCCCCCCCCCDDCDCDDDDDDDCDCDDDCDCDDDCCDDDCDCDDCDCCCCDCDCDDCDCDCDCCCDCCCDDDDDCDCCDDDDDCCCDDDDDDCCCCCCDCCCDDCDDCCDDCDCCDDCCCCDCDDDCDCDDDCCCCDDDDDDDDDCCCDDDCCCDCDCCDDDDDCDCCCDDDDCCCCCCCCCDCCDDCDCCDCCDCDCDDDDDCCCDCCCCDCDDCCDDDCDDCCCCCDDDDDDCDCDDCDDCCDDDCCDCDDCCDDDCCCDDDDDDDCDDCCDDCDCDDDCCCDDCDDDCDDCCCCCCDCDDCDCCDCCCCCCDDCCDCCCDDDCDDCDCDCDCDCDCDDCDCCDCCCCDDCCCCCCCDCCDCCDDDCDCDDCCCCDCDDDCCCDCDDCDDDDCDDCCDDCCDDDDCCCDDDDDCCCDCDDDDDCCDCDCDDCCDCDCCCCCCDDCCCCCCCCDCCDDDDCCDDCDCDDDCCCCDDCCDCDDDDCDDCDCCDCCCDDCDDCCDCCDCDDCDDCCDCDDCCDCDCDCCCDDCDDCCCDCDCDDDCCCCDDCCDDDDDDDCDDCDCDDCDCCCDCDDDDDCCCCDDDDCDDCCDCDDDDDDCDCDCCDDCCCDCCDCCDDDCDCCDCDDDCCDDCDDDDCCDDDDCDDDCDCDDDDDDDDCDDCCCDCDDDDCDCCDCDCDCDDCDDDDDCDDCCCCCDCDCCDCCCCCDCCDCCDDCDDDDCCCDDDDDDCCDCDDCDCDDCCCCCDCDDCDCCCCDDDDCCDCCCDCCCDCCCDCDCDDCCCDCCCCDCCDCDDCCCCDCDCDCCCCDCCCCCDCDCDCCCCCDDCCCCDDDDCDDDDDCCDDDDCCCDDDCCDCDCDCCCDDCCDCCCDCCDDDCCDCCDDDDDCDCCDDCDDDCCCCDCCDDDCDCCDCCCDDCCCCC',
            # Tabu Search
            'DCCDCCCDCDDDDCDDDCDDDCCCCDDCCCDCCCCCCCDDCDCCCCCCDDCDDDCDDCDCCCCCCDCDDDDCDCDCCCDCDCCDCDDDCDDDCCCCDCDDCDDCDDDCCCCDCCDCCCDCCCDDCDCCCCDCCCDCDDCDCCCCCCDDDDDDCCDCDCDDDDCDDCCCDDDCCCCCCDDCDCDCDCDCCDDDDCCCCCCDDCDDDDCCDDCCDDCDDDDDDCCDDDCCDDCCCCCDDCDDCDDDCCDCDDCCDCCCDDDCCDDCDCCDDCDCDDDCDDDDDDDDDCDCDDDCDDDDDDCCCDDDDCDDDCCCCCDDDDCCDCDDCCCCCCDDCCDDCCDDCDDDCDCDDCCDDDDDDCDCDDCDDDDDCCCDCCDDCDDCCCCDCCCCCDDDCDCDDDCCCCDCDCDDDDCDCDDCDDDDDDCDCCCDDCCCCCDDCDDCCDDCCCDCDCCCCDDCCDCCCDDDCCDDCDCCCCCCCDCDCCDDDDCCCCCDCDCCCDCCDCDDDCDCCCCCDCCDCDDCDDCCCDCDCCCCCCDCDCDDCCDDCDCDDCDDCDCDDCCDCDCCCCDCCCDDCCDCCDDDCCDCCCDCDDDCDDDCCDCDCDCDDDCCDCDCCCCCDDDDCCDDCCDDDCCDCDCCCCDCCDDCCCCDDCDDDDCDDCCCDCCDCCCCDDDDCCCCCDCDCCCCCCDDDCCCCDDCDCDDDCDDCDDDDDDDCDCCDDCDDDCDCDCDDCCCDDDCDCDDCDDCCCDCCCDDDCCDDCCCDCCDCCDDCDDDCDCCCCCDDDDCCCDCCCDCCDCDDCCDCDDDDDDDCDDDCDCDCCCDDDCDCCCCCCCCDDDCDCCDDDDDCDCCCDCCDDDCDDDCCCCDDDDCDDCDCCDDCCDDCDDDDDDDCCCDCCDCDCDCCCCDCCCCDDDDCCDDDCDDDDDDDDDCDDCDDCCDCCDDCDDDDCCDCDCDCCDCCDCCDCCDCDCCCCCDCDDCDCCDDCCDDCDDDDDDCDDCCDDCDDCCDCCDCCDDDDDDDDDDCCDC'
        ],
        debug=False)
    fixed.perform()
    print(fixed)
